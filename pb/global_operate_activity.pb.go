// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: global_operate_activity.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 运营活动时间类型
type OperateActivityTimeType int32

const (
	OperateActivityTimeType_ATT_INVALID      OperateActivityTimeType = 0
	OperateActivityTimeType_ABSOLUTE_TIME    OperateActivityTimeType = 1 // 绝对时间
	OperateActivityTimeType_REGISTER_TIME    OperateActivityTimeType = 2 // 注册时间
	OperateActivityTimeType_OPEN_SERVER_TIME OperateActivityTimeType = 3 // 开服时间
)

// Enum value maps for OperateActivityTimeType.
var (
	OperateActivityTimeType_name = map[int32]string{
		0: "ATT_INVALID",
		1: "ABSOLUTE_TIME",
		2: "REGISTER_TIME",
		3: "OPEN_SERVER_TIME",
	}
	OperateActivityTimeType_value = map[string]int32{
		"ATT_INVALID":      0,
		"ABSOLUTE_TIME":    1,
		"REGISTER_TIME":    2,
		"OPEN_SERVER_TIME": 3,
	}
)

func (x OperateActivityTimeType) Enum() *OperateActivityTimeType {
	p := new(OperateActivityTimeType)
	*p = x
	return p
}

func (x OperateActivityTimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperateActivityTimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_global_operate_activity_proto_enumTypes[0].Descriptor()
}

func (OperateActivityTimeType) Type() protoreflect.EnumType {
	return &file_global_operate_activity_proto_enumTypes[0]
}

func (x OperateActivityTimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperateActivityTimeType.Descriptor instead.
func (OperateActivityTimeType) EnumDescriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{0}
}

// 活动模板类型
type ActivityTemplateType int32

const (
	ActivityTemplateType_ATP_INVALID      ActivityTemplateType = 0
	ActivityTemplateType_SIGN_IN_TYPE     ActivityTemplateType = 1 // 签到
	ActivityTemplateType_CONDITION_TYPE   ActivityTemplateType = 2 // 条件
	ActivityTemplateType_CONSUMPTION_TYPE ActivityTemplateType = 3 // 消费
	ActivityTemplateType_LOTTERY_TYPE     ActivityTemplateType = 4 // 抽奖
	ActivityTemplateType_SCORE_TYPE       ActivityTemplateType = 5 // 积分
)

// Enum value maps for ActivityTemplateType.
var (
	ActivityTemplateType_name = map[int32]string{
		0: "ATP_INVALID",
		1: "SIGN_IN_TYPE",
		2: "CONDITION_TYPE",
		3: "CONSUMPTION_TYPE",
		4: "LOTTERY_TYPE",
		5: "SCORE_TYPE",
	}
	ActivityTemplateType_value = map[string]int32{
		"ATP_INVALID":      0,
		"SIGN_IN_TYPE":     1,
		"CONDITION_TYPE":   2,
		"CONSUMPTION_TYPE": 3,
		"LOTTERY_TYPE":     4,
		"SCORE_TYPE":       5,
	}
)

func (x ActivityTemplateType) Enum() *ActivityTemplateType {
	p := new(ActivityTemplateType)
	*p = x
	return p
}

func (x ActivityTemplateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityTemplateType) Descriptor() protoreflect.EnumDescriptor {
	return file_global_operate_activity_proto_enumTypes[1].Descriptor()
}

func (ActivityTemplateType) Type() protoreflect.EnumType {
	return &file_global_operate_activity_proto_enumTypes[1]
}

func (x ActivityTemplateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityTemplateType.Descriptor instead.
func (ActivityTemplateType) EnumDescriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{1}
}

// 任务刷新类型
type TaskRefreshType int32

const (
	TaskRefreshType_TRT_NOT   TaskRefreshType = 0 // 不刷新
	TaskRefreshType_TRT_DAY   TaskRefreshType = 1 // 每日
	TaskRefreshType_TRT_WEEK  TaskRefreshType = 2 // 每周
	TaskRefreshType_TRT_MONTH TaskRefreshType = 3 // 每月
)

// Enum value maps for TaskRefreshType.
var (
	TaskRefreshType_name = map[int32]string{
		0: "TRT_NOT",
		1: "TRT_DAY",
		2: "TRT_WEEK",
		3: "TRT_MONTH",
	}
	TaskRefreshType_value = map[string]int32{
		"TRT_NOT":   0,
		"TRT_DAY":   1,
		"TRT_WEEK":  2,
		"TRT_MONTH": 3,
	}
)

func (x TaskRefreshType) Enum() *TaskRefreshType {
	p := new(TaskRefreshType)
	*p = x
	return p
}

func (x TaskRefreshType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskRefreshType) Descriptor() protoreflect.EnumDescriptor {
	return file_global_operate_activity_proto_enumTypes[2].Descriptor()
}

func (TaskRefreshType) Type() protoreflect.EnumType {
	return &file_global_operate_activity_proto_enumTypes[2]
}

func (x TaskRefreshType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskRefreshType.Descriptor instead.
func (TaskRefreshType) EnumDescriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{2}
}

// 任务状态
type OperateTaskState int32

const (
	OperateTaskState_OTS_Doing  OperateTaskState = 0 //任务进行中
	OperateTaskState_OTS_Finish OperateTaskState = 1 //任务结束,可领奖
	OperateTaskState_OTS_Over   OperateTaskState = 2 //任务完成，已经领奖
)

// Enum value maps for OperateTaskState.
var (
	OperateTaskState_name = map[int32]string{
		0: "OTS_Doing",
		1: "OTS_Finish",
		2: "OTS_Over",
	}
	OperateTaskState_value = map[string]int32{
		"OTS_Doing":  0,
		"OTS_Finish": 1,
		"OTS_Over":   2,
	}
)

func (x OperateTaskState) Enum() *OperateTaskState {
	p := new(OperateTaskState)
	*p = x
	return p
}

func (x OperateTaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperateTaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_global_operate_activity_proto_enumTypes[3].Descriptor()
}

func (OperateTaskState) Type() protoreflect.EnumType {
	return &file_global_operate_activity_proto_enumTypes[3]
}

func (x OperateTaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperateTaskState.Descriptor instead.
func (OperateTaskState) EnumDescriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{3}
}

// 道具（货币）通过结构
type ItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`   //道具（货币）ID
	Num int32 `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"` //数量
}

func (x *ItemData) Reset() {
	*x = ItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemData) ProtoMessage() {}

func (x *ItemData) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemData.ProtoReflect.Descriptor instead.
func (*ItemData) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{0}
}

func (x *ItemData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemData) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 图片信息
type ActivityImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`         // 图片ID
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`     // 图片名字
	Status string `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"` // 图片状态
	Url    string `protobuf:"bytes,4,opt,name=Url,proto3" json:"Url,omitempty"`       // 图片下载地址
}

func (x *ActivityImage) Reset() {
	*x = ActivityImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityImage) ProtoMessage() {}

func (x *ActivityImage) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityImage.ProtoReflect.Descriptor instead.
func (*ActivityImage) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityImage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActivityImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivityImage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ActivityImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 活动信息
type OperateActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64                   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                                                                                                              // id
	Channel                []int32                 `protobuf:"varint,2,rep,packed,name=Channel,proto3" json:"Channel,omitempty"`                                                                                             // 渠道
	Servers                []int32                 `protobuf:"varint,3,rep,packed,name=Servers,proto3" json:"Servers,omitempty"`                                                                                             // 区服
	TimeType               OperateActivityTimeType `protobuf:"varint,4,opt,name=TimeType,proto3,enum=Game.OperateActivityTimeType" json:"TimeType,omitempty"`                                                                // 活动时间类型
	PredictionTime         int64                   `protobuf:"varint,5,opt,name=PredictionTime,proto3" json:"PredictionTime,omitempty"`                                                                                      // 活动预告开启时间
	StartTime              int64                   `protobuf:"varint,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                                                                                                // 活动开始时间
	EndTime                int64                   `protobuf:"varint,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                                                                                                    // 活动结束时间
	CloseDuration          int64                   `protobuf:"varint,8,opt,name=CloseDuration,proto3" json:"CloseDuration,omitempty"`                                                                                        // 活动关闭时间
	ActivityName           string                  `protobuf:"bytes,9,opt,name=ActivityName,proto3" json:"ActivityName,omitempty"`                                                                                           // 活动名字
	ActivityTitle          string                  `protobuf:"bytes,10,opt,name=ActivityTitle,proto3" json:"ActivityTitle,omitempty"`                                                                                        // 活动标题
	ActivityDescription    string                  `protobuf:"bytes,11,opt,name=ActivityDescription,proto3" json:"ActivityDescription,omitempty"`                                                                            // 活动描述
	BackgroundImgUrl       *ActivityImage          `protobuf:"bytes,12,opt,name=BackgroundImgUrl,proto3" json:"BackgroundImgUrl,omitempty"`                                                                                  // 活动背景图地址
	TitleImgUrl            *ActivityImage          `protobuf:"bytes,13,opt,name=TitleImgUrl,proto3" json:"TitleImgUrl,omitempty"`                                                                                            // 活动标题图地址
	IsNestedActivity       bool                    `protobuf:"varint,14,opt,name=IsNestedActivity,proto3" json:"IsNestedActivity,omitempty"`                                                                                 // 是否开启时间嵌套活动
	ActivityList           map[int32]*ActivityList `protobuf:"bytes,15,rep,name=ActivityList,proto3" json:"ActivityList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 活动模板ID组  key:活动开启天数  value:活动模板列表
	PreCondition           []*Condition            `protobuf:"bytes,16,rep,name=PreCondition,proto3" json:"PreCondition,omitempty"`                                                                                          // 活动前置条件
	ScoreSystem            []*ScoreTemplate        `protobuf:"bytes,17,rep,name=ScoreSystem,proto3" json:"ScoreSystem,omitempty"`                                                                                            // 积分系统
	Label                  int32                   `protobuf:"varint,18,opt,name=Label,proto3" json:"Label,omitempty"`                                                                                                       //页签
	ClientUI               string                  `protobuf:"bytes,19,opt,name=ClientUI,proto3" json:"ClientUI,omitempty"`                                                                                                  //客户端UI
	Sort                   int32                   `protobuf:"varint,20,opt,name=Sort,proto3" json:"Sort,omitempty"`                                                                                                         //排序值
	NeedPreCondAllFinished bool                    `protobuf:"varint,21,opt,name=NeedPreCondAllFinished,proto3" json:"NeedPreCondAllFinished,omitempty"`                                                                     // 前置条件是否需要全部完成
}

func (x *OperateActivity) Reset() {
	*x = OperateActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateActivity) ProtoMessage() {}

func (x *OperateActivity) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateActivity.ProtoReflect.Descriptor instead.
func (*OperateActivity) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{2}
}

func (x *OperateActivity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperateActivity) GetChannel() []int32 {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *OperateActivity) GetServers() []int32 {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *OperateActivity) GetTimeType() OperateActivityTimeType {
	if x != nil {
		return x.TimeType
	}
	return OperateActivityTimeType_ATT_INVALID
}

func (x *OperateActivity) GetPredictionTime() int64 {
	if x != nil {
		return x.PredictionTime
	}
	return 0
}

func (x *OperateActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *OperateActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *OperateActivity) GetCloseDuration() int64 {
	if x != nil {
		return x.CloseDuration
	}
	return 0
}

func (x *OperateActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *OperateActivity) GetActivityTitle() string {
	if x != nil {
		return x.ActivityTitle
	}
	return ""
}

func (x *OperateActivity) GetActivityDescription() string {
	if x != nil {
		return x.ActivityDescription
	}
	return ""
}

func (x *OperateActivity) GetBackgroundImgUrl() *ActivityImage {
	if x != nil {
		return x.BackgroundImgUrl
	}
	return nil
}

func (x *OperateActivity) GetTitleImgUrl() *ActivityImage {
	if x != nil {
		return x.TitleImgUrl
	}
	return nil
}

func (x *OperateActivity) GetIsNestedActivity() bool {
	if x != nil {
		return x.IsNestedActivity
	}
	return false
}

func (x *OperateActivity) GetActivityList() map[int32]*ActivityList {
	if x != nil {
		return x.ActivityList
	}
	return nil
}

func (x *OperateActivity) GetPreCondition() []*Condition {
	if x != nil {
		return x.PreCondition
	}
	return nil
}

func (x *OperateActivity) GetScoreSystem() []*ScoreTemplate {
	if x != nil {
		return x.ScoreSystem
	}
	return nil
}

func (x *OperateActivity) GetLabel() int32 {
	if x != nil {
		return x.Label
	}
	return 0
}

func (x *OperateActivity) GetClientUI() string {
	if x != nil {
		return x.ClientUI
	}
	return ""
}

func (x *OperateActivity) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *OperateActivity) GetNeedPreCondAllFinished() bool {
	if x != nil {
		return x.NeedPreCondAllFinished
	}
	return false
}

// 活动列表
type ActivityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ActivityTemplate `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // 活动模板列表
}

func (x *ActivityList) Reset() {
	*x = ActivityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityList) ProtoMessage() {}

func (x *ActivityList) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityList.ProtoReflect.Descriptor instead.
func (*ActivityList) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityList) GetList() []*ActivityTemplate {
	if x != nil {
		return x.List
	}
	return nil
}

// 活动模板数据
type ActivityTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                                                    // 模板ID
	Name         string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`                                                 // 模板名称
	TemplateType ActivityTemplateType `protobuf:"varint,3,opt,name=TemplateType,proto3,enum=Game.ActivityTemplateType" json:"TemplateType,omitempty"` // 模板类型
	SignIn       *SignInTemplate      `protobuf:"bytes,4,opt,name=SignIn,proto3" json:"SignIn,omitempty"`                                             // 签到
	Condition    *ConditionTemplate   `protobuf:"bytes,5,opt,name=Condition,proto3" json:"Condition,omitempty"`                                       // 条件
	Consumption  *ConsumptionTemplate `protobuf:"bytes,6,opt,name=Consumption,proto3" json:"Consumption,omitempty"`                                   // 消耗
	Lottery      *LotteryTemplate     `protobuf:"bytes,7,opt,name=Lottery,proto3" json:"Lottery,omitempty"`                                           // 抽奖
}

func (x *ActivityTemplate) Reset() {
	*x = ActivityTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityTemplate) ProtoMessage() {}

func (x *ActivityTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityTemplate.ProtoReflect.Descriptor instead.
func (*ActivityTemplate) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivityTemplate) GetTemplateType() ActivityTemplateType {
	if x != nil {
		return x.TemplateType
	}
	return ActivityTemplateType_ATP_INVALID
}

func (x *ActivityTemplate) GetSignIn() *SignInTemplate {
	if x != nil {
		return x.SignIn
	}
	return nil
}

func (x *ActivityTemplate) GetCondition() *ConditionTemplate {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ActivityTemplate) GetConsumption() *ConsumptionTemplate {
	if x != nil {
		return x.Consumption
	}
	return nil
}

func (x *ActivityTemplate) GetLottery() *LotteryTemplate {
	if x != nil {
		return x.Lottery
	}
	return nil
}

// 条件结构(任务配置数据)
type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition   int32           `protobuf:"varint,1,opt,name=Condition,proto3" json:"Condition,omitempty"`                               // 条件类型
	ParamsList  []int32         `protobuf:"varint,2,rep,packed,name=ParamsList,proto3" json:"ParamsList,omitempty"`                      // 条件参数
	Description string          `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`                            // 条件说明
	RewardList  []*ItemData     `protobuf:"bytes,4,rep,name=RewardList,proto3" json:"RewardList,omitempty"`                              // 奖励列表
	RefreshType TaskRefreshType `protobuf:"varint,5,opt,name=RefreshType,proto3,enum=Game.TaskRefreshType" json:"RefreshType,omitempty"` // 刷新类型
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{5}
}

func (x *Condition) GetCondition() int32 {
	if x != nil {
		return x.Condition
	}
	return 0
}

func (x *Condition) GetParamsList() []int32 {
	if x != nil {
		return x.ParamsList
	}
	return nil
}

func (x *Condition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Condition) GetRewardList() []*ItemData {
	if x != nil {
		return x.RewardList
	}
	return nil
}

func (x *Condition) GetRefreshType() TaskRefreshType {
	if x != nil {
		return x.RefreshType
	}
	return TaskRefreshType_TRT_NOT
}

// 补签规则
type RepairSignInRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RSI_Expend    []*ItemData  `protobuf:"bytes,1,rep,name=RSI_Expend,json=RSIExpend,proto3" json:"RSI_Expend,omitempty"`          // 道具消耗补签
	RSI_Condition []*Condition `protobuf:"bytes,2,rep,name=RSI_Condition,json=RSICondition,proto3" json:"RSI_Condition,omitempty"` // 条件补签
}

func (x *RepairSignInRule) Reset() {
	*x = RepairSignInRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairSignInRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairSignInRule) ProtoMessage() {}

func (x *RepairSignInRule) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairSignInRule.ProtoReflect.Descriptor instead.
func (*RepairSignInRule) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{6}
}

func (x *RepairSignInRule) GetRSI_Expend() []*ItemData {
	if x != nil {
		return x.RSI_Expend
	}
	return nil
}

func (x *RepairSignInRule) GetRSI_Condition() []*Condition {
	if x != nil {
		return x.RSI_Condition
	}
	return nil
}

// 签到奖励
type SignInReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignInReward []*ItemData `protobuf:"bytes,1,rep,name=SignInReward,proto3" json:"SignInReward,omitempty"` // 签到奖励
}

func (x *SignInReward) Reset() {
	*x = SignInReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInReward) ProtoMessage() {}

func (x *SignInReward) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInReward.ProtoReflect.Descriptor instead.
func (*SignInReward) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{7}
}

func (x *SignInReward) GetSignInReward() []*ItemData {
	if x != nil {
		return x.SignInReward
	}
	return nil
}

// 签到模板数据
type SignInTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerCondition  bool                `protobuf:"varint,1,opt,name=TriggerCondition,proto3" json:"TriggerCondition,omitempty"`   // 0被动（登陆）触发 1主动（按钮）触发
	SignInCount       int32               `protobuf:"varint,2,opt,name=SignInCount,proto3" json:"SignInCount,omitempty"`             // 签到天数
	RepairSignInCount int32               `protobuf:"varint,3,opt,name=RepairSignInCount,proto3" json:"RepairSignInCount,omitempty"` // 补签次数
	RepairSignIn      []*RepairSignInRule `protobuf:"bytes,4,rep,name=RepairSignIn,proto3" json:"RepairSignIn,omitempty"`            // 补签规则(长度等于补签次数)
	RewardList        []*SignInReward     `protobuf:"bytes,5,rep,name=RewardList,proto3" json:"RewardList,omitempty"`                // 签到奖励(长度等于天数)
	IsAutoGetReward   bool                `protobuf:"varint,6,opt,name=IsAutoGetReward,proto3" json:"IsAutoGetReward,omitempty"`     // 是否自动发放签到奖励 true：自动  false：手动领取
}

func (x *SignInTemplate) Reset() {
	*x = SignInTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInTemplate) ProtoMessage() {}

func (x *SignInTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInTemplate.ProtoReflect.Descriptor instead.
func (*SignInTemplate) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{8}
}

func (x *SignInTemplate) GetTriggerCondition() bool {
	if x != nil {
		return x.TriggerCondition
	}
	return false
}

func (x *SignInTemplate) GetSignInCount() int32 {
	if x != nil {
		return x.SignInCount
	}
	return 0
}

func (x *SignInTemplate) GetRepairSignInCount() int32 {
	if x != nil {
		return x.RepairSignInCount
	}
	return 0
}

func (x *SignInTemplate) GetRepairSignIn() []*RepairSignInRule {
	if x != nil {
		return x.RepairSignIn
	}
	return nil
}

func (x *SignInTemplate) GetRewardList() []*SignInReward {
	if x != nil {
		return x.RewardList
	}
	return nil
}

func (x *SignInTemplate) GetIsAutoGetReward() bool {
	if x != nil {
		return x.IsAutoGetReward
	}
	return false
}

// 条件模板数据
type ConditionTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Condition `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConditionTemplate) Reset() {
	*x = ConditionTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionTemplate) ProtoMessage() {}

func (x *ConditionTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionTemplate.ProtoReflect.Descriptor instead.
func (*ConditionTemplate) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{9}
}

func (x *ConditionTemplate) GetData() []*Condition {
	if x != nil {
		return x.Data
	}
	return nil
}

// 商品（消耗）兑换
type ExchangeGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods      []*ItemData `protobuf:"bytes,1,rep,name=Goods,proto3" json:"Goods,omitempty"`            // 商品数据
	IsLimit    bool        `protobuf:"varint,2,opt,name=IsLimit,proto3" json:"IsLimit,omitempty"`       // 是否限购
	LimitCount int32       `protobuf:"varint,3,opt,name=LimitCount,proto3" json:"LimitCount,omitempty"` // 限购次数
	Expend     []*ItemData `protobuf:"bytes,4,rep,name=Expend,proto3" json:"Expend,omitempty"`          // 消耗道具信息
	Discount   int32       `protobuf:"varint,5,opt,name=Discount,proto3" json:"Discount,omitempty"`     // 折扣
}

func (x *ExchangeGoods) Reset() {
	*x = ExchangeGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeGoods) ProtoMessage() {}

func (x *ExchangeGoods) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeGoods.ProtoReflect.Descriptor instead.
func (*ExchangeGoods) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{10}
}

func (x *ExchangeGoods) GetGoods() []*ItemData {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *ExchangeGoods) GetIsLimit() bool {
	if x != nil {
		return x.IsLimit
	}
	return false
}

func (x *ExchangeGoods) GetLimitCount() int32 {
	if x != nil {
		return x.LimitCount
	}
	return 0
}

func (x *ExchangeGoods) GetExpend() []*ItemData {
	if x != nil {
		return x.Expend
	}
	return nil
}

func (x *ExchangeGoods) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

// 消费模板
type ConsumptionTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellGoods []*ExchangeGoods `protobuf:"bytes,1,rep,name=SellGoods,proto3" json:"SellGoods,omitempty"`
}

func (x *ConsumptionTemplate) Reset() {
	*x = ConsumptionTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumptionTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumptionTemplate) ProtoMessage() {}

func (x *ConsumptionTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumptionTemplate.ProtoReflect.Descriptor instead.
func (*ConsumptionTemplate) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{11}
}

func (x *ConsumptionTemplate) GetSellGoods() []*ExchangeGoods {
	if x != nil {
		return x.SellGoods
	}
	return nil
}

// 抽奖
type Lottery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SingleCost          int32 `protobuf:"varint,1,opt,name=SingleCost,proto3" json:"SingleCost,omitempty"`                   // 单抽消耗
	FirstSingleDiscount int32 `protobuf:"varint,2,opt,name=FirstSingleDiscount,proto3" json:"FirstSingleDiscount,omitempty"` // 单抽首次折扣
	MultiCount          int32 `protobuf:"varint,3,opt,name=MultiCount,proto3" json:"MultiCount,omitempty"`                   // 多抽次数
	FirstMultiDiscount  int32 `protobuf:"varint,4,opt,name=FirstMultiDiscount,proto3" json:"FirstMultiDiscount,omitempty"`   // 多抽首次折扣
	MultiDiscount       int32 `protobuf:"varint,5,opt,name=MultiDiscount,proto3" json:"MultiDiscount,omitempty"`             // 多抽折扣
}

func (x *Lottery) Reset() {
	*x = Lottery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lottery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lottery) ProtoMessage() {}

func (x *Lottery) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lottery.ProtoReflect.Descriptor instead.
func (*Lottery) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{12}
}

func (x *Lottery) GetSingleCost() int32 {
	if x != nil {
		return x.SingleCost
	}
	return 0
}

func (x *Lottery) GetFirstSingleDiscount() int32 {
	if x != nil {
		return x.FirstSingleDiscount
	}
	return 0
}

func (x *Lottery) GetMultiCount() int32 {
	if x != nil {
		return x.MultiCount
	}
	return 0
}

func (x *Lottery) GetFirstMultiDiscount() int32 {
	if x != nil {
		return x.FirstMultiDiscount
	}
	return 0
}

func (x *Lottery) GetMultiDiscount() int32 {
	if x != nil {
		return x.MultiDiscount
	}
	return 0
}

// 抽奖模板
type LotteryTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetGoods     *ItemData  `protobuf:"bytes,1,opt,name=TargetGoods,proto3" json:"TargetGoods,omitempty"`          // 包装道具
	CostItemId      int32      `protobuf:"varint,2,opt,name=CostItemId,proto3" json:"CostItemId,omitempty"`           // 抽奖消耗道具ID
	LotteryList     []*Lottery `protobuf:"bytes,3,rep,name=LotteryList,proto3" json:"LotteryList,omitempty"`          // 抽奖列表
	GuaranteedCount int32      `protobuf:"varint,4,opt,name=GuaranteedCount,proto3" json:"GuaranteedCount,omitempty"` // 保底次数（共享）
	GuaranteedItem  *ItemData  `protobuf:"bytes,5,opt,name=GuaranteedItem,proto3" json:"GuaranteedItem,omitempty"`    // 保底道具
	RewardPoolId    int32      `protobuf:"varint,6,opt,name=RewardPoolId,proto3" json:"RewardPoolId,omitempty"`       // 奖池ID
}

func (x *LotteryTemplate) Reset() {
	*x = LotteryTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryTemplate) ProtoMessage() {}

func (x *LotteryTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryTemplate.ProtoReflect.Descriptor instead.
func (*LotteryTemplate) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{13}
}

func (x *LotteryTemplate) GetTargetGoods() *ItemData {
	if x != nil {
		return x.TargetGoods
	}
	return nil
}

func (x *LotteryTemplate) GetCostItemId() int32 {
	if x != nil {
		return x.CostItemId
	}
	return 0
}

func (x *LotteryTemplate) GetLotteryList() []*Lottery {
	if x != nil {
		return x.LotteryList
	}
	return nil
}

func (x *LotteryTemplate) GetGuaranteedCount() int32 {
	if x != nil {
		return x.GuaranteedCount
	}
	return 0
}

func (x *LotteryTemplate) GetGuaranteedItem() *ItemData {
	if x != nil {
		return x.GuaranteedItem
	}
	return nil
}

func (x *LotteryTemplate) GetRewardPoolId() int32 {
	if x != nil {
		return x.RewardPoolId
	}
	return 0
}

// 奖池
type RewardPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward      *ItemData `protobuf:"bytes,1,opt,name=Reward,proto3" json:"Reward,omitempty"`
	WeightValue int32     `protobuf:"varint,2,opt,name=WeightValue,proto3" json:"WeightValue,omitempty"`
}

func (x *RewardPool) Reset() {
	*x = RewardPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPool) ProtoMessage() {}

func (x *RewardPool) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardPool.ProtoReflect.Descriptor instead.
func (*RewardPool) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{14}
}

func (x *RewardPool) GetReward() *ItemData {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *RewardPool) GetWeightValue() int32 {
	if x != nil {
		return x.WeightValue
	}
	return 0
}

// 积分模板
type ScoreTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score  *ItemData   `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`   // 积分道具
	Reward []*ItemData `protobuf:"bytes,2,rep,name=Reward,proto3" json:"Reward,omitempty"` // 对应积分奖励
}

func (x *ScoreTemplate) Reset() {
	*x = ScoreTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreTemplate) ProtoMessage() {}

func (x *ScoreTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreTemplate.ProtoReflect.Descriptor instead.
func (*ScoreTemplate) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{15}
}

func (x *ScoreTemplate) GetScore() *ItemData {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *ScoreTemplate) GetReward() []*ItemData {
	if x != nil {
		return x.Reward
	}
	return nil
}

// 任务数据
type OperateTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      int32            `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	TaskState   OperateTaskState `protobuf:"varint,2,opt,name=taskState,proto3,enum=Game.OperateTaskState" json:"taskState,omitempty"` // 任务状态 0:进行中, 1:完成未领奖  2：完成已领奖
	Progress    int32            `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`                              // 任务进度
	CompleteNum int32            `protobuf:"varint,4,opt,name=completeNum,proto3" json:"completeNum,omitempty"`                        // 完成次数
}

func (x *OperateTaskInfo) Reset() {
	*x = OperateTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateTaskInfo) ProtoMessage() {}

func (x *OperateTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateTaskInfo.ProtoReflect.Descriptor instead.
func (*OperateTaskInfo) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{16}
}

func (x *OperateTaskInfo) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *OperateTaskInfo) GetTaskState() OperateTaskState {
	if x != nil {
		return x.TaskState
	}
	return OperateTaskState_OTS_Doing
}

func (x *OperateTaskInfo) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *OperateTaskInfo) GetCompleteNum() int32 {
	if x != nil {
		return x.CompleteNum
	}
	return 0
}

type OperateActivityDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   int64                     `protobuf:"varint,1,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`                                                                                             // 活动ID
	PreTaskInfos []*OperateTaskInfo        `protobuf:"bytes,2,rep,name=PreTaskInfos,proto3" json:"PreTaskInfos,omitempty"`                                                                                          // 前置任务进度信息
	GotScores    map[int32]bool            `protobuf:"bytes,3,rep,name=GotScores,proto3" json:"GotScores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`      // 已领取积分信息  key:OperateActivity.ScoreTemplate 数组索引  value:是否开启
	ActivityList map[int32]*ActivityDBList `protobuf:"bytes,4,rep,name=ActivityList,proto3" json:"ActivityList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 活动模板ID组  key:活动天数  value：活动模板列表
}

func (x *OperateActivityDB) Reset() {
	*x = OperateActivityDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateActivityDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateActivityDB) ProtoMessage() {}

func (x *OperateActivityDB) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateActivityDB.ProtoReflect.Descriptor instead.
func (*OperateActivityDB) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{17}
}

func (x *OperateActivityDB) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *OperateActivityDB) GetPreTaskInfos() []*OperateTaskInfo {
	if x != nil {
		return x.PreTaskInfos
	}
	return nil
}

func (x *OperateActivityDB) GetGotScores() map[int32]bool {
	if x != nil {
		return x.GotScores
	}
	return nil
}

func (x *OperateActivityDB) GetActivityList() map[int32]*ActivityDBList {
	if x != nil {
		return x.ActivityList
	}
	return nil
}

// 活动列表
type ActivityDBList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List map[int32]*ActivityTemplateDB `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 活动模板列表  key：模板索引  value：模板数据
}

func (x *ActivityDBList) Reset() {
	*x = ActivityDBList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDBList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDBList) ProtoMessage() {}

func (x *ActivityDBList) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDBList.ProtoReflect.Descriptor instead.
func (*ActivityDBList) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{18}
}

func (x *ActivityDBList) GetList() map[int32]*ActivityTemplateDB {
	if x != nil {
		return x.List
	}
	return nil
}

type ActivityTemplateDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignInDB      *SignInTemplateDB      `protobuf:"bytes,1,opt,name=SignInDB,proto3" json:"SignInDB,omitempty"`
	ConsumptionDB *ConsumptionTemplateDB `protobuf:"bytes,2,opt,name=ConsumptionDB,proto3" json:"ConsumptionDB,omitempty"`
	ConditionDB   *ConditionTemplateDB   `protobuf:"bytes,3,opt,name=ConditionDB,proto3" json:"ConditionDB,omitempty"`
}

func (x *ActivityTemplateDB) Reset() {
	*x = ActivityTemplateDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityTemplateDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityTemplateDB) ProtoMessage() {}

func (x *ActivityTemplateDB) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityTemplateDB.ProtoReflect.Descriptor instead.
func (*ActivityTemplateDB) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{19}
}

func (x *ActivityTemplateDB) GetSignInDB() *SignInTemplateDB {
	if x != nil {
		return x.SignInDB
	}
	return nil
}

func (x *ActivityTemplateDB) GetConsumptionDB() *ConsumptionTemplateDB {
	if x != nil {
		return x.ConsumptionDB
	}
	return nil
}

func (x *ActivityTemplateDB) GetConditionDB() *ConditionTemplateDB {
	if x != nil {
		return x.ConditionDB
	}
	return nil
}

type ConsumptionTemplateDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyCounts map[int32]int32 `protobuf:"bytes,1,rep,name=BuyCounts,proto3" json:"BuyCounts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 已购买次数
}

func (x *ConsumptionTemplateDB) Reset() {
	*x = ConsumptionTemplateDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumptionTemplateDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumptionTemplateDB) ProtoMessage() {}

func (x *ConsumptionTemplateDB) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumptionTemplateDB.ProtoReflect.Descriptor instead.
func (*ConsumptionTemplateDB) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{20}
}

func (x *ConsumptionTemplateDB) GetBuyCounts() map[int32]int32 {
	if x != nil {
		return x.BuyCounts
	}
	return nil
}

type SignInTemplateDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedDay         int32              `protobuf:"varint,1,opt,name=SignedDay,proto3" json:"SignedDay,omitempty"`                                                                                // 已签到天数
	LastSignTimestamp int64              `protobuf:"varint,2,opt,name=LastSignTimestamp,proto3" json:"LastSignTimestamp,omitempty"`                                                                // 上次签到时间戳
	Conditions        []*RepairCondition `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`                                                                               // 补签任务进度
	RepairCount       int32              `protobuf:"varint,4,opt,name=RepairCount,proto3" json:"RepairCount,omitempty"`                                                                            // 补签次数
	Gots              map[int32]bool     `protobuf:"bytes,5,rep,name=Gots,proto3" json:"Gots,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 已领取奖励
}

func (x *SignInTemplateDB) Reset() {
	*x = SignInTemplateDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInTemplateDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInTemplateDB) ProtoMessage() {}

func (x *SignInTemplateDB) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInTemplateDB.ProtoReflect.Descriptor instead.
func (*SignInTemplateDB) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{21}
}

func (x *SignInTemplateDB) GetSignedDay() int32 {
	if x != nil {
		return x.SignedDay
	}
	return 0
}

func (x *SignInTemplateDB) GetLastSignTimestamp() int64 {
	if x != nil {
		return x.LastSignTimestamp
	}
	return 0
}

func (x *SignInTemplateDB) GetConditions() []*RepairCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *SignInTemplateDB) GetRepairCount() int32 {
	if x != nil {
		return x.RepairCount
	}
	return 0
}

func (x *SignInTemplateDB) GetGots() map[int32]bool {
	if x != nil {
		return x.Gots
	}
	return nil
}

type RepairCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*OperateTaskInfo `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"` // 补签任务进度
}

func (x *RepairCondition) Reset() {
	*x = RepairCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairCondition) ProtoMessage() {}

func (x *RepairCondition) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairCondition.ProtoReflect.Descriptor instead.
func (*RepairCondition) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{22}
}

func (x *RepairCondition) GetTasks() []*OperateTaskInfo {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type ConditionTemplateDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskInfo []*OperateTaskInfo `protobuf:"bytes,1,rep,name=taskInfo,proto3" json:"taskInfo,omitempty"` // 任务进度信息
}

func (x *ConditionTemplateDB) Reset() {
	*x = ConditionTemplateDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionTemplateDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionTemplateDB) ProtoMessage() {}

func (x *ConditionTemplateDB) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionTemplateDB.ProtoReflect.Descriptor instead.
func (*ConditionTemplateDB) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{23}
}

func (x *ConditionTemplateDB) GetTaskInfo() []*OperateTaskInfo {
	if x != nil {
		return x.TaskInfo
	}
	return nil
}

type Operate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detailed *OperateActivityDB `protobuf:"bytes,1,opt,name=detailed,proto3" json:"detailed,omitempty"` //活动详细信息
	Conf     *OperateActivity   `protobuf:"bytes,2,opt,name=conf,proto3" json:"conf,omitempty"`         //活动配置信息
	Day      int32              `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`          //开启天数
}

func (x *Operate) Reset() {
	*x = Operate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_global_operate_activity_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operate) ProtoMessage() {}

func (x *Operate) ProtoReflect() protoreflect.Message {
	mi := &file_global_operate_activity_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operate.ProtoReflect.Descriptor instead.
func (*Operate) Descriptor() ([]byte, []int) {
	return file_global_operate_activity_proto_rawDescGZIP(), []int{24}
}

func (x *Operate) GetDetailed() *OperateActivityDB {
	if x != nil {
		return x.Detailed
	}
	return nil
}

func (x *Operate) GetConf() *OperateActivity {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *Operate) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

var File_global_operate_activity_proto protoreflect.FileDescriptor

var file_global_operate_activity_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x4e, 0x75, 0x6d, 0x22, 0x5d, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x72, 0x6c, 0x22, 0xc2, 0x07, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x54, 0x69,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x54, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x10, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x10, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x0b, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x49, 0x73, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a,
	0x0b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x4e, 0x65,
	0x65, 0x64, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x4e, 0x65, 0x65, 0x64,
	0x50, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x1a, 0x53, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xc9, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x35, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x07, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x07, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x22,
	0xd4, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x77, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x52, 0x53,
	0x49, 0x5f, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x52, 0x53, 0x49, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x52, 0x53, 0x49,
	0x5f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x52, 0x53, 0x49, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x42, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x32, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x0c, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x32,
	0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x38, 0x0a, 0x11,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x49, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x13,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x09, 0x53, 0x65, 0x6c,
	0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x0f, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x0b, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x6f, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x52, 0x0b, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x47, 0x75, 0x61, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x47,
	0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0e, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x5d, 0x0a, 0x0d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x9d,
	0x01, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x98,
	0x03, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x42, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x50, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x44, 0x0a, 0x09, 0x47, 0x6f, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x42, 0x2e, 0x47, 0x6f, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x47, 0x6f, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x42, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x47, 0x6f, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x55, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x0e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x42, 0x4c, 0x69, 0x73, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x51, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x42, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xc8, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x42, 0x12, 0x32, 0x0a, 0x08, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x44, 0x42, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x42, 0x52, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x42, 0x12, 0x41,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x42, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x44, 0x42, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x42, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x42,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x42, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x42, 0x22, 0x9f,
	0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x42, 0x12, 0x48, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x42, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa6, 0x02, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x42, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x44, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x47, 0x6f,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x42,
	0x2e, 0x47, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x47, 0x6f, 0x74, 0x73,
	0x1a, 0x37, 0x0a, 0x09, 0x47, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x0f, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x48, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x42,
	0x12, 0x31, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x7b, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x33,
	0x0a, 0x08, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x42, 0x52, 0x08, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79,
	0x2a, 0x66, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x54, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x41, 0x42, 0x53, 0x4f, 0x4c, 0x55, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x2a, 0x85, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x53,
	0x55, 0x4d, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x4c, 0x4f, 0x54, 0x54, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x05,
	0x2a, 0x48, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x54, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x52, 0x54, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x52, 0x54, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x03, 0x2a, 0x3f, 0x0a, 0x10, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x4f, 0x54, 0x53, 0x5f, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x4f, 0x54, 0x53, 0x5f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x4f, 0x54, 0x53, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x10, 0x02, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_global_operate_activity_proto_rawDescOnce sync.Once
	file_global_operate_activity_proto_rawDescData = file_global_operate_activity_proto_rawDesc
)

func file_global_operate_activity_proto_rawDescGZIP() []byte {
	file_global_operate_activity_proto_rawDescOnce.Do(func() {
		file_global_operate_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_global_operate_activity_proto_rawDescData)
	})
	return file_global_operate_activity_proto_rawDescData
}

var file_global_operate_activity_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_global_operate_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_global_operate_activity_proto_goTypes = []interface{}{
	(OperateActivityTimeType)(0),  // 0: Game.OperateActivityTimeType
	(ActivityTemplateType)(0),     // 1: Game.ActivityTemplateType
	(TaskRefreshType)(0),          // 2: Game.TaskRefreshType
	(OperateTaskState)(0),         // 3: Game.OperateTaskState
	(*ItemData)(nil),              // 4: Game.ItemData
	(*ActivityImage)(nil),         // 5: Game.ActivityImage
	(*OperateActivity)(nil),       // 6: Game.OperateActivity
	(*ActivityList)(nil),          // 7: Game.ActivityList
	(*ActivityTemplate)(nil),      // 8: Game.ActivityTemplate
	(*Condition)(nil),             // 9: Game.Condition
	(*RepairSignInRule)(nil),      // 10: Game.RepairSignInRule
	(*SignInReward)(nil),          // 11: Game.SignInReward
	(*SignInTemplate)(nil),        // 12: Game.SignInTemplate
	(*ConditionTemplate)(nil),     // 13: Game.ConditionTemplate
	(*ExchangeGoods)(nil),         // 14: Game.ExchangeGoods
	(*ConsumptionTemplate)(nil),   // 15: Game.ConsumptionTemplate
	(*Lottery)(nil),               // 16: Game.Lottery
	(*LotteryTemplate)(nil),       // 17: Game.LotteryTemplate
	(*RewardPool)(nil),            // 18: Game.RewardPool
	(*ScoreTemplate)(nil),         // 19: Game.ScoreTemplate
	(*OperateTaskInfo)(nil),       // 20: Game.OperateTaskInfo
	(*OperateActivityDB)(nil),     // 21: Game.OperateActivityDB
	(*ActivityDBList)(nil),        // 22: Game.ActivityDBList
	(*ActivityTemplateDB)(nil),    // 23: Game.ActivityTemplateDB
	(*ConsumptionTemplateDB)(nil), // 24: Game.ConsumptionTemplateDB
	(*SignInTemplateDB)(nil),      // 25: Game.SignInTemplateDB
	(*RepairCondition)(nil),       // 26: Game.RepairCondition
	(*ConditionTemplateDB)(nil),   // 27: Game.ConditionTemplateDB
	(*Operate)(nil),               // 28: Game.Operate
	nil,                           // 29: Game.OperateActivity.ActivityListEntry
	nil,                           // 30: Game.OperateActivityDB.GotScoresEntry
	nil,                           // 31: Game.OperateActivityDB.ActivityListEntry
	nil,                           // 32: Game.ActivityDBList.ListEntry
	nil,                           // 33: Game.ConsumptionTemplateDB.BuyCountsEntry
	nil,                           // 34: Game.SignInTemplateDB.GotsEntry
}
var file_global_operate_activity_proto_depIdxs = []int32{
	0,  // 0: Game.OperateActivity.TimeType:type_name -> Game.OperateActivityTimeType
	5,  // 1: Game.OperateActivity.BackgroundImgUrl:type_name -> Game.ActivityImage
	5,  // 2: Game.OperateActivity.TitleImgUrl:type_name -> Game.ActivityImage
	29, // 3: Game.OperateActivity.ActivityList:type_name -> Game.OperateActivity.ActivityListEntry
	9,  // 4: Game.OperateActivity.PreCondition:type_name -> Game.Condition
	19, // 5: Game.OperateActivity.ScoreSystem:type_name -> Game.ScoreTemplate
	8,  // 6: Game.ActivityList.List:type_name -> Game.ActivityTemplate
	1,  // 7: Game.ActivityTemplate.TemplateType:type_name -> Game.ActivityTemplateType
	12, // 8: Game.ActivityTemplate.SignIn:type_name -> Game.SignInTemplate
	13, // 9: Game.ActivityTemplate.Condition:type_name -> Game.ConditionTemplate
	15, // 10: Game.ActivityTemplate.Consumption:type_name -> Game.ConsumptionTemplate
	17, // 11: Game.ActivityTemplate.Lottery:type_name -> Game.LotteryTemplate
	4,  // 12: Game.Condition.RewardList:type_name -> Game.ItemData
	2,  // 13: Game.Condition.RefreshType:type_name -> Game.TaskRefreshType
	4,  // 14: Game.RepairSignInRule.RSI_Expend:type_name -> Game.ItemData
	9,  // 15: Game.RepairSignInRule.RSI_Condition:type_name -> Game.Condition
	4,  // 16: Game.SignInReward.SignInReward:type_name -> Game.ItemData
	10, // 17: Game.SignInTemplate.RepairSignIn:type_name -> Game.RepairSignInRule
	11, // 18: Game.SignInTemplate.RewardList:type_name -> Game.SignInReward
	9,  // 19: Game.ConditionTemplate.data:type_name -> Game.Condition
	4,  // 20: Game.ExchangeGoods.Goods:type_name -> Game.ItemData
	4,  // 21: Game.ExchangeGoods.Expend:type_name -> Game.ItemData
	14, // 22: Game.ConsumptionTemplate.SellGoods:type_name -> Game.ExchangeGoods
	4,  // 23: Game.LotteryTemplate.TargetGoods:type_name -> Game.ItemData
	16, // 24: Game.LotteryTemplate.LotteryList:type_name -> Game.Lottery
	4,  // 25: Game.LotteryTemplate.GuaranteedItem:type_name -> Game.ItemData
	4,  // 26: Game.RewardPool.Reward:type_name -> Game.ItemData
	4,  // 27: Game.ScoreTemplate.score:type_name -> Game.ItemData
	4,  // 28: Game.ScoreTemplate.Reward:type_name -> Game.ItemData
	3,  // 29: Game.OperateTaskInfo.taskState:type_name -> Game.OperateTaskState
	20, // 30: Game.OperateActivityDB.PreTaskInfos:type_name -> Game.OperateTaskInfo
	30, // 31: Game.OperateActivityDB.GotScores:type_name -> Game.OperateActivityDB.GotScoresEntry
	31, // 32: Game.OperateActivityDB.ActivityList:type_name -> Game.OperateActivityDB.ActivityListEntry
	32, // 33: Game.ActivityDBList.List:type_name -> Game.ActivityDBList.ListEntry
	25, // 34: Game.ActivityTemplateDB.SignInDB:type_name -> Game.SignInTemplateDB
	24, // 35: Game.ActivityTemplateDB.ConsumptionDB:type_name -> Game.ConsumptionTemplateDB
	27, // 36: Game.ActivityTemplateDB.ConditionDB:type_name -> Game.ConditionTemplateDB
	33, // 37: Game.ConsumptionTemplateDB.BuyCounts:type_name -> Game.ConsumptionTemplateDB.BuyCountsEntry
	26, // 38: Game.SignInTemplateDB.conditions:type_name -> Game.RepairCondition
	34, // 39: Game.SignInTemplateDB.Gots:type_name -> Game.SignInTemplateDB.GotsEntry
	20, // 40: Game.RepairCondition.tasks:type_name -> Game.OperateTaskInfo
	20, // 41: Game.ConditionTemplateDB.taskInfo:type_name -> Game.OperateTaskInfo
	21, // 42: Game.Operate.detailed:type_name -> Game.OperateActivityDB
	6,  // 43: Game.Operate.conf:type_name -> Game.OperateActivity
	7,  // 44: Game.OperateActivity.ActivityListEntry.value:type_name -> Game.ActivityList
	22, // 45: Game.OperateActivityDB.ActivityListEntry.value:type_name -> Game.ActivityDBList
	23, // 46: Game.ActivityDBList.ListEntry.value:type_name -> Game.ActivityTemplateDB
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_global_operate_activity_proto_init() }
func file_global_operate_activity_proto_init() {
	if File_global_operate_activity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_global_operate_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairSignInRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumptionTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lottery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateActivityDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDBList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityTemplateDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumptionTemplateDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInTemplateDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionTemplateDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_global_operate_activity_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_global_operate_activity_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_global_operate_activity_proto_goTypes,
		DependencyIndexes: file_global_operate_activity_proto_depIdxs,
		EnumInfos:         file_global_operate_activity_proto_enumTypes,
		MessageInfos:      file_global_operate_activity_proto_msgTypes,
	}.Build()
	File_global_operate_activity_proto = out.File
	file_global_operate_activity_proto_rawDesc = nil
	file_global_operate_activity_proto_goTypes = nil
	file_global_operate_activity_proto_depIdxs = nil
}
